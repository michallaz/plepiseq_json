{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Subschema for plepiseq output, viral classification with Pango/Nextclade",
  "$comment": "Schemat dla outputu, klasyfikacja wirusa do linii ewolucyjnej na podstawie danych pango/nextclade.",
  "type": "array",
  "minItems": 1,
  "items": {
    "type": "object",
    "properties": {
      "error_message": {
        "type": "string",
        "$comment": "Dowolny tekst zwracany jako komunikat bledu podczas obliczen. Wymagany, jesli status to Blad"
      },
      "status": {
        "type": "string",
        "enum": [
          "tak",
          "nie",
          "blad"
        ],
        "$comment": "Informacja czy policzono profil, niepoliczono, zwrocono blad. Wymagany."
      },
      "database_name": {
        "type": "string",
        "minLength": 1,
        "$comment": "Nazwa bazy na podstawie ktorej przewidywana jest linia ewolucyjna. Wymagany."
      },
      "database_version": {
        "type": "string",
        "minLength": 1,
        "$comment": "Wersja bazy na podstawie ktorej okreslamy linie ewolucyjna. Wymagany."
      },
      "program_name": {
        "type": "string",
        "minLength": 1,
        "$comment": "Nazwa programu uzywanego do okreslenia linii ewolucyjnej. Wymagany."
      },
      "program_version": {
        "type": "string",
        "minLength": 1,
        "$comment": "Wersja programu uzywanego do okreslenia linii ewolucyjnej. Wymagany."
      },
      "variant_name": {
        "type": "string",
        "minLength": 1,
        "$comment": "Nazwa przewidzianego wariantu. Wymagany."
      },
      "variant_qc_status": {
        "type": "string",
        "enum": [
          "pass",
          "warning",
          "fail"
        ],
        "$comment": "Informacja o przydatnosci genomu do predykcji wariantu jesli program ja zwraca. Opcjonalny."
      }
    },
    "required": [
      "status",
      "database_name"
    ],
    "allOf": [
      {
        "if": {
          "properties": {
            "status": {
              "const": "tak"
            }
          }
        },
        "then": {
          "required": [
            "database_version",
            "program_name",
            "program_version",
            "variant_name"
          ]
        },
        "else": {
          "required": [
            "error_message"
          ]
        }
      }
    ]
  }
}
